import streamlit as st
import requests

# Cl√© API Groq (√† stocker dans .streamlit/secrets.toml)
GROQ_API_KEY = st.secrets["api_key"]

# Personnalit√©s des p√©ch√©s capitaux
peches = {
    "Orgueil": "Tu es sup√©rieur √† tous. Tu parles avec fiert√© et m√©pris.",
    "Gourmandise": "Tu es obs√©d√© par la nourriture et les plaisirs des sens.",
    "Luxure": "Tu es charmeur, s√©ducteur, et tu parles avec passion.",
    "Avarice": "Tu veux tout garder pour toi, tu es froid et calculateur.",
    "Paresse": "Tu es lent, tu n'as pas envie de faire d'efforts.",
    "Col√®re": "Tu es impulsif, agressif, pr√™t √† exploser √† chaque mot.",
    "Envie": "Tu es jaloux, frustr√©, tu veux ce que les autres ont."
}

# Interface utilisateur
st.set_page_config(page_title="Chat des 7 P√©ch√©s Capitaux", page_icon="üíÄ")
st.title("üíÄ Les 7 P√©ch√©s Capitaux - IA Groq (LLaMA 3)")

peche_choisi = st.selectbox("Choisis un p√©ch√© capital :", list(peches.keys()))
st.markdown(f"**Personnalit√© IA :** *{peches[peche_choisi]}*")

user_input = st.text_input("üí¨ √âcris un message √† ce p√©ch√© :", "")

# Fonction pour appeler Groq
def chat_with_groq(peche, message):
    url = "https://api.groq.com/openai/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {GROQ_API_KEY}",
        "Content-Type": "application/json"
    }
    data = {
        "model": "llama3-8b-8192",
        "messages": [
            {
                "role": "system",
                "content": f"Tu incarnes le p√©ch√© capital '{peche}'. Ta personnalit√© est : {peches[peche]}"
            },
            {
                "role": "user",
                "content": message
            }
        ],
        "temperature": 0.8
    }

    response = requests.post(url, headers=headers, json=data)
    if response.status_code == 200:
        return response.json()["choices"][0]["message"]["content"]
    else:
        return f"Erreur {response.status_code} : {response.text}"

# Affichage de la r√©ponse
if user_input:
    with st.spinner("Le p√©ch√© r√©pond..."):
        reponse = chat_with_groq(peche_choisi, user_input)
        st.markdown(f"**{peche_choisi} üó£Ô∏è** : {reponse}")

